installer.py: Installs all necessary dependencies.
cryptography.py: Contains the quantum-resistant hashing and signature generation logic (Qhash3512).
parameters.py: Houses network genesis parameters, block rewards, transaction fees, block size, and other settings.
server.py: Manages the core blockchain operations, including block creation, transaction handling, and proof-of-work.
api.py: Exposes JSON-RPC endpoints for interacting with the blockchain.
config.py: Manages node configuration settings.
consensus.py: Handles the blockchain's consensus mechanism, including difficulty adjustment.
database.py: Manages blockchain data storage using LevelDB.
logger.py: Handles logging for debugging and monitoring.
main.py: The main wallet and node UI, allowing interaction with the blockchain.
metrics.py: Tracks performance metrics, such as block times and hash rates.
miner.py: Handles mining operations.
network.py: Manages peer-to-peer networking and communication.
state.py: Manages the blockchain's state, including balances and transaction pools.
wallet.py: Manages private keys, account creation, and wallet storage.
vm.py: Executes smart contracts written in WebAssembly (Wasm).
fts.py: Manages the creation, transfer, and querying of fungible tokens (FTs).
nfts.py: Manages the creation, transfer, and querying of non-fungible tokens (NFTs).
